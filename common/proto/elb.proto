package elb;

enum MsgTypeId {
    GetHostReqId         = 1; //api get a host from agent
    GetHostRspId         = 2; //agent give a host to api
    ReportReqId          = 3; //api report call result to agent
    GetRouteByToolReqId  = 4; //tool get route from agent
    GetRouteByToolRspId  = 5; //agent give route to tool
    GetRouteByAgentReqId = 6; //agent get route from dnsserver
    GetRouteByAgentRspId = 7; //dnsserver give route to agent
    ReportStatusReqId    = 8; //agent report lb status to reporter
    GetRouteByAPIReqId   = 9; //api get route from agent
    GetRouteByAPIRspId   = 10; //agent give route to api
}

//represent a remote node
message HostAddr {
    required int32 ip   = 1;
    required int32 port = 2;
}

//api get a host from agent (UDP)
message GetHostReq {
    required uint32 seq   = 1;
    required int32 modid  = 2;
    required int32 cmdid  = 3;
}

//agent give a host to api (UDP)
message GetHostRsp {
    required uint32 seq    = 1;
    required int32 modid   = 2;
    required int32 cmdid   = 3;
    required int32 retcode = 4;
    optional HostAddr host = 5;
}

//api report call result to agent
message ReportReq {
    required int32 modid   = 1;
    required int32 cmdid   = 2;
    required HostAddr host = 3;
    required int32 retcode = 4;
}

//agent get route from dnsserver (TCP)
//or tool get route from agent (UDP)
//or api get route from agent (UDP)
message GetRouteReq {
    required int32 modid = 1;
    required int32 cmdid = 2;
}

//dnsserver give route to agent (TCP)
//or agent give route to tool (UDP)
//or agent give route to api (UDP), overload field is needed
message GetRouteRsp {
    required int32 modid    = 1;
    required int32 cmdid    = 2;
    repeated HostAddr hosts = 3;
    optional bool overload  = 4;//for api<->agent
}

//host call result
message HostCallResult {
    required int32 ip      = 1;
    required int32 port    = 2;
    required uint32 succ   = 3;
    required uint32 err    = 4;
    required bool overload = 5;
}

//agent report lb status to reporter
message ReportStatusReq {
    required int32 modid            = 1;
    required int32 cmdid            = 2;
    required int32 caller           = 3;
    repeated HostCallResult results = 4;
    required uint32 ts              = 5;//sec
}
